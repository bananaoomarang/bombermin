<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2018 Roku, Inc. All rights reserved. -->

<!--
    @Public
    buttons support same content meta-data fields as Label list, so you can set title and small icon for each button
    fields description:
    TITLE                     - string  The label for the list item
    HDLISTITEMICONURL         - uri The image file for the icon to be displayed to the left of the list item label when the list item is not focused
    HDLISTITEMICONSELECTEDURL - uri The image file for the icon to be displayed to the left of the list item label when the list item is focused
 -->

<component name="DetailsView" extends="SGDEXComponent" xsi:noNamespaceSchemaLocation="https://devtools.web.roku.com/schema/RokuSceneGraph.xsd">
    <interface>
        <!-- @Public -->
        <!-- Content node for buttons node. Has childrens with id and title that will be shown on View.  -->
        <field id="buttons" type="node" alias="buttons.content" />

        <!-- @Public -->
        <!-- @WriteOnly -->
        <!-- Tells details view how your content is structured
        if set to true it will take children of _content_ to display on View
        if set to false it will take _content_ and display it on the View  -->
        <field id="isContentList" type="bool" value="true" />

        <!-- @Public -->
        <!-- @WriteOnly -->
        <!-- defines logic of showing content when pressing left on first item, or pressing right on last item.
        if set to true it will start from start from first item (when pressing right) or last item (when pressing left) -->
        <field id="allowWrapContent" type="bool" value="true" />

        <!-- @Public -->
        <!-- @ReadOnly  -->
        <!-- Current displayed item. This item is set when Content Getter finished loading extra meta-data  -->
        <field id="currentItem" type="node" alwaysNotify="true" />

        <!-- @Public -->
        <!-- tells what item is currently focused  -->
        <field id="itemFocused" type="integer" alwaysNotify="true" />

        <!-- @Public -->
        <!-- itemLoaded is set to true when currentItem field is populated with new content node when content available or loaded  -->
        <field id="itemLoaded" type="bool" alwaysNotify="true" />

        <!-- @Public -->
        <!-- @WriteOnly  -->
        <!-- Manually focus on desired item. This field must be set after setting the content field. -->
        <field id="jumpToItem" type="integer" onChange="OnJumpToItem" value="0" alwaysNotify="true" />

        <!-- @Public -->
        <!-- @ReadOnly  -->
        <!-- Tells what button is focused  -->
        <field id="buttonFocused" type="integer" alias="buttons.itemFocused" />

        <!-- @Public -->
        <!-- @ReadOnly  -->
        <!-- Is set when button is selected by user. Should be observed in channel.
        Can be used for showing next View or start playback or so. -->
        <field id="buttonSelected" type="integer" alias="buttons.itemSelected" />

        <!-- @Public -->
        <!-- @WriteOnly  -->
        <!-- Interface for setting focused button  -->
        <field id="jumpToButton" type="integer" alias="buttons.jumpToItem" alwaysNotify="true" />

        <!--
            @Public
            @Override
            <field id="theme" type="assocarray" />

            Controls the color of visual elements

            @PossibleValue textColor - sets the color of all text elements in the view
            @PossibleValue focusRingColor - set color of focus ring
            @PossibleValue focusFootprintColor - set color for focus ring when unfocused
            @PossibleValue rowLabelColor - sets color for row title

            @PossibleValue descriptionColor -set the color of descriptionLabel
            @PossibleValue actorsColor -set the color of actorsLabel
            @PossibleValue ReleaseDateColor -set the the color for ReleaseDate
            @PossibleValue RatingAndCategoriesColor -set the color of categories

            @PossibleValue buttonsFocusedColor - set the color of focused buttons
            @PossibleValue buttonsUnFocusedColor - set the color of unfucused buttons
            @PossibleValue buttonsFocusRingColor - set the color of button focuse ring
            @PossibleValue buttonsSectionDividerTextColor - set the color of section divider
        -->
    </interface>

    <script type="text/brightscript" uri="DetailsView.brs" />
    <script type="text/brightscript" uri="../../ContentManager/ContentManagerUtils.brs" />
    <script type="text/brightscript" uri="../utils/utils.brs" />

    <children>
        <LayoutGroup
            id="detailsGroup"
            translation="[1166, 0]"
            layoutDirection="horiz"
            horizAlignment="right"
            itemSpacings="[40]">
            <LayoutGroup
                id = "viewLayout"
                itemSpacings="[14, 10]"
                layoutDirection="vert"
                horizAlignment="right">
                <Rectangle
                    id="styledPosterArea"
                    height="201"
                    color="0xFFFFFF00">
                    <StyledPoster
                        id="poster"
                        maxWidth="357"
                        maxHeight="201"
                    />
                </Rectangle>
                <Label
                    id="info2"
                    width="357"
                    wrap="false"
                    horizAlign="right"
                />
                <Label
                    id="info3"
                    width="357"
                    wrap="false"
                    horizAlign="right"
                />
            </LayoutGroup>

            <Group>
                <LabelList
                    id="buttons"
                    numRows="3"
                    itemSpacing="[0,10]"
                    itemSize="[593, 48]"
                />

                <LayoutGroup
                    itemSpacings="[40]"
                    translation="[0, 208]">
                    <Label
                        id="description"
                        wrap="true"
                        maxLines="5"
                        width="593"
                    />

                    <Label
                        id="actors"
                        wrap="false"
                        width="520"
                    />
                </LayoutGroup>
            </Group>
        </LayoutGroup>

        <LayoutGroup
            translation="[640, 360]"
            horizAlignment="center"
            vertAlignment="center">
            <BusySpinner
                id="spinner"
                control="start"
                visible="true"
            />
        </LayoutGroup>
    </children>
</component>
